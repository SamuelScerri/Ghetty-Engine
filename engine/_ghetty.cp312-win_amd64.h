/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package samuelscerri/ghetty/engine */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h>

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 9 "ghetty.go"





// #define Py_LIMITED_API // need full API for PyRun*
#include <Python.h>
typedef uint8_t bool;
// static inline is trick for avoiding need for extra .c file
// the following are used for build value -- switch on reflect.Kind
// or the types equivalent
static inline PyObject* gopy_build_bool(uint8_t val) {
	return Py_BuildValue("b", val);
}
static inline PyObject* gopy_build_int64(int64_t val) {
	return Py_BuildValue("k", val);
}
static inline PyObject* gopy_build_uint64(uint64_t val) {
	return Py_BuildValue("K", val);
}
static inline PyObject* gopy_build_float64(double val) {
	return Py_BuildValue("d", val);
}
static inline PyObject* gopy_build_string(const char* val) {
	return Py_BuildValue("s", val);
}
static inline void gopy_decref(PyObject* obj) { // macro
	Py_XDECREF(obj);
}
static inline void gopy_incref(PyObject* obj) { // macro
	Py_XINCREF(obj);
}
static inline int gopy_method_check(PyObject* obj) { // macro
	return PyMethod_Check(obj);
}
static inline void gopy_err_handle() {
	if(PyErr_Occurred() != NULL) {
		PyErr_Print();
	}
}


#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef size_t GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
#ifdef _MSC_VER
#include <complex.h>
typedef _Fcomplex GoComplex64;
typedef _Dcomplex GoComplex128;
#else
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;
#endif

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif

extern __declspec(dllexport) void GoPyInit();

// DecRef decrements the reference count for the specified handle
// and deletes it it goes to zero.
//
extern __declspec(dllexport) void DecRef(long long int handle);

// IncRef increments the reference count for the specified handle.
//
extern __declspec(dllexport) void IncRef(long long int handle);

// NumHandles returns the number of handles currently in use.
//
extern __declspec(dllexport) GoInt NumHandles();

// --- wrapping slice: []bool ---
//
extern __declspec(dllexport) long long int Slice_bool_CTor();
extern __declspec(dllexport) GoInt Slice_bool_len(long long int handle);
extern __declspec(dllexport) char Slice_bool_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_bool_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_bool_set(long long int handle, GoInt _idx, char _vl);
extern __declspec(dllexport) void Slice_bool_append(long long int handle, char _vl);

// --- wrapping slice: []byte ---
//
extern __declspec(dllexport) long long int Slice_byte_CTor();
extern __declspec(dllexport) GoInt Slice_byte_len(long long int handle);
extern __declspec(dllexport) char Slice_byte_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_byte_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_byte_set(long long int handle, GoInt _idx, char _vl);
extern __declspec(dllexport) void Slice_byte_append(long long int handle, char _vl);

// --- wrapping slice: []error ---
//
extern __declspec(dllexport) long long int Slice_error_CTor();
extern __declspec(dllexport) GoInt Slice_error_len(long long int handle);
extern __declspec(dllexport) char* Slice_error_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_error_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_error_set(long long int handle, GoInt _idx, char* _vl);
extern __declspec(dllexport) void Slice_error_append(long long int handle, char* _vl);

// --- wrapping slice: []float32 ---
//
extern __declspec(dllexport) long long int Slice_float32_CTor();
extern __declspec(dllexport) GoInt Slice_float32_len(long long int handle);
extern __declspec(dllexport) float Slice_float32_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_float32_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_float32_set(long long int handle, GoInt _idx, float _vl);
extern __declspec(dllexport) void Slice_float32_append(long long int handle, float _vl);

// --- wrapping slice: []float64 ---
//
extern __declspec(dllexport) long long int Slice_float64_CTor();
extern __declspec(dllexport) GoInt Slice_float64_len(long long int handle);
extern __declspec(dllexport) double Slice_float64_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_float64_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_float64_set(long long int handle, GoInt _idx, double _vl);
extern __declspec(dllexport) void Slice_float64_append(long long int handle, double _vl);

// --- wrapping slice: []int ---
//
extern __declspec(dllexport) long long int Slice_int_CTor();
extern __declspec(dllexport) GoInt Slice_int_len(long long int handle);
extern __declspec(dllexport) long long int Slice_int_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_int_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_int_set(long long int handle, GoInt _idx, long long int _vl);
extern __declspec(dllexport) void Slice_int_append(long long int handle, long long int _vl);

// --- wrapping slice: []int16 ---
//
extern __declspec(dllexport) long long int Slice_int16_CTor();
extern __declspec(dllexport) GoInt Slice_int16_len(long long int handle);
extern __declspec(dllexport) short int Slice_int16_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_int16_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_int16_set(long long int handle, GoInt _idx, short int _vl);
extern __declspec(dllexport) void Slice_int16_append(long long int handle, short int _vl);

// --- wrapping slice: []int32 ---
//
extern __declspec(dllexport) long long int Slice_int32_CTor();
extern __declspec(dllexport) GoInt Slice_int32_len(long long int handle);
extern __declspec(dllexport) long int Slice_int32_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_int32_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_int32_set(long long int handle, GoInt _idx, long int _vl);
extern __declspec(dllexport) void Slice_int32_append(long long int handle, long int _vl);

// --- wrapping slice: []int64 ---
//
extern __declspec(dllexport) long long int Slice_int64_CTor();
extern __declspec(dllexport) GoInt Slice_int64_len(long long int handle);
extern __declspec(dllexport) long long int Slice_int64_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_int64_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_int64_set(long long int handle, GoInt _idx, long long int _vl);
extern __declspec(dllexport) void Slice_int64_append(long long int handle, long long int _vl);

// --- wrapping slice: []int8 ---
//
extern __declspec(dllexport) long long int Slice_int8_CTor();
extern __declspec(dllexport) GoInt Slice_int8_len(long long int handle);
extern __declspec(dllexport) char Slice_int8_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_int8_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_int8_set(long long int handle, GoInt _idx, char _vl);
extern __declspec(dllexport) void Slice_int8_append(long long int handle, char _vl);

// --- wrapping slice: []rune ---
//
extern __declspec(dllexport) long long int Slice_rune_CTor();
extern __declspec(dllexport) GoInt Slice_rune_len(long long int handle);
extern __declspec(dllexport) long int Slice_rune_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_rune_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_rune_set(long long int handle, GoInt _idx, long int _vl);
extern __declspec(dllexport) void Slice_rune_append(long long int handle, long int _vl);

// --- wrapping slice: []string ---
//
extern __declspec(dllexport) long long int Slice_string_CTor();
extern __declspec(dllexport) GoInt Slice_string_len(long long int handle);
extern __declspec(dllexport) char* Slice_string_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_string_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_string_set(long long int handle, GoInt _idx, char* _vl);
extern __declspec(dllexport) void Slice_string_append(long long int handle, char* _vl);

// --- wrapping slice: []uint ---
//
extern __declspec(dllexport) long long int Slice_uint_CTor();
extern __declspec(dllexport) GoInt Slice_uint_len(long long int handle);
extern __declspec(dllexport) long long unsigned int Slice_uint_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_uint_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_uint_set(long long int handle, GoInt _idx, long long unsigned int _vl);
extern __declspec(dllexport) void Slice_uint_append(long long int handle, long long unsigned int _vl);

// --- wrapping slice: []uint16 ---
//
extern __declspec(dllexport) long long int Slice_uint16_CTor();
extern __declspec(dllexport) GoInt Slice_uint16_len(long long int handle);
extern __declspec(dllexport) short unsigned int Slice_uint16_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_uint16_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_uint16_set(long long int handle, GoInt _idx, short unsigned int _vl);
extern __declspec(dllexport) void Slice_uint16_append(long long int handle, short unsigned int _vl);

// --- wrapping slice: []uint32 ---
//
extern __declspec(dllexport) long long int Slice_uint32_CTor();
extern __declspec(dllexport) GoInt Slice_uint32_len(long long int handle);
extern __declspec(dllexport) long unsigned int Slice_uint32_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_uint32_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_uint32_set(long long int handle, GoInt _idx, long unsigned int _vl);
extern __declspec(dllexport) void Slice_uint32_append(long long int handle, long unsigned int _vl);

// --- wrapping slice: []uint64 ---
//
extern __declspec(dllexport) long long int Slice_uint64_CTor();
extern __declspec(dllexport) GoInt Slice_uint64_len(long long int handle);
extern __declspec(dllexport) long long unsigned int Slice_uint64_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_uint64_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_uint64_set(long long int handle, GoInt _idx, long long unsigned int _vl);
extern __declspec(dllexport) void Slice_uint64_append(long long int handle, long long unsigned int _vl);

// --- wrapping slice: []uint8 ---
//
extern __declspec(dllexport) long long int Slice_uint8_CTor();
extern __declspec(dllexport) GoInt Slice_uint8_len(long long int handle);
extern __declspec(dllexport) unsigned char Slice_uint8_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_uint8_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_uint8_set(long long int handle, GoInt _idx, unsigned char _vl);
extern __declspec(dllexport) void Slice_uint8_append(long long int handle, unsigned char _vl);

// --- wrapping slice: [3]ghetty.Vertex ---
//
extern __declspec(dllexport) long long int Array_3_ghetty_Vertex_CTor();
extern __declspec(dllexport) GoInt Array_3_ghetty_Vertex_len(long long int handle);
extern __declspec(dllexport) long long int Array_3_ghetty_Vertex_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) void Array_3_ghetty_Vertex_set(long long int handle, GoInt _idx, long long int _vl);

// --- wrapping slice: [4]*ebiten.Image ---
//
extern __declspec(dllexport) long long int Array_4_Ptr_ebiten_Image_CTor();
extern __declspec(dllexport) GoInt Array_4_Ptr_ebiten_Image_len(long long int handle);
extern __declspec(dllexport) long long int Array_4_Ptr_ebiten_Image_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) void Array_4_Ptr_ebiten_Image_set(long long int handle, GoInt _idx, long long int _vl);

// --- wrapping slice: []*ghetty.Matrix ---
//
extern __declspec(dllexport) long long int Slice_Ptr_ghetty_Matrix_CTor();
extern __declspec(dllexport) GoInt Slice_Ptr_ghetty_Matrix_len(long long int handle);
extern __declspec(dllexport) long long int Slice_Ptr_ghetty_Matrix_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_Ptr_ghetty_Matrix_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_Ptr_ghetty_Matrix_set(long long int handle, GoInt _idx, long long int _vl);
extern __declspec(dllexport) void Slice_Ptr_ghetty_Matrix_append(long long int handle, long long int _vl);

// --- wrapping slice: []*ghetty.ProcessedTriangle ---
//
extern __declspec(dllexport) long long int Slice_Ptr_ghetty_ProcessedTriangle_CTor();
extern __declspec(dllexport) GoInt Slice_Ptr_ghetty_ProcessedTriangle_len(long long int handle);
extern __declspec(dllexport) long long int Slice_Ptr_ghetty_ProcessedTriangle_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_Ptr_ghetty_ProcessedTriangle_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_Ptr_ghetty_ProcessedTriangle_set(long long int handle, GoInt _idx, long long int _vl);
extern __declspec(dllexport) void Slice_Ptr_ghetty_ProcessedTriangle_append(long long int handle, long long int _vl);

// --- wrapping slice: []ebiten.Vertex ---
//
extern __declspec(dllexport) long long int Slice_ebiten_Vertex_CTor();
extern __declspec(dllexport) GoInt Slice_ebiten_Vertex_len(long long int handle);
extern __declspec(dllexport) long long int Slice_ebiten_Vertex_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_ebiten_Vertex_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_ebiten_Vertex_set(long long int handle, GoInt _idx, long long int _vl);
extern __declspec(dllexport) void Slice_ebiten_Vertex_append(long long int handle, long long int _vl);

// --- wrapping slice: []fs.DirEntry ---
//
extern __declspec(dllexport) long long int Slice_fs_DirEntry_CTor();
extern __declspec(dllexport) GoInt Slice_fs_DirEntry_len(long long int handle);
extern __declspec(dllexport) long long int Slice_fs_DirEntry_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_fs_DirEntry_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_fs_DirEntry_set(long long int handle, GoInt _idx, long long int _vl);
extern __declspec(dllexport) void Slice_fs_DirEntry_append(long long int handle, long long int _vl);

// --- wrapping slice: []fs.FileInfo ---
//
extern __declspec(dllexport) long long int Slice_fs_FileInfo_CTor();
extern __declspec(dllexport) GoInt Slice_fs_FileInfo_len(long long int handle);
extern __declspec(dllexport) long long int Slice_fs_FileInfo_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_fs_FileInfo_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_fs_FileInfo_set(long long int handle, GoInt _idx, long long int _vl);
extern __declspec(dllexport) void Slice_fs_FileInfo_append(long long int handle, long long int _vl);

// --- wrapping slice: []ghetty.Tile ---
//
extern __declspec(dllexport) long long int Slice_ghetty_Tile_CTor();
extern __declspec(dllexport) GoInt Slice_ghetty_Tile_len(long long int handle);
extern __declspec(dllexport) long long int Slice_ghetty_Tile_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_ghetty_Tile_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_ghetty_Tile_set(long long int handle, GoInt _idx, long long int _vl);
extern __declspec(dllexport) void Slice_ghetty_Tile_append(long long int handle, long long int _vl);

// --- wrapping slice: []ghetty.Triangle ---
//
extern __declspec(dllexport) long long int Slice_ghetty_Triangle_CTor();
extern __declspec(dllexport) GoInt Slice_ghetty_Triangle_len(long long int handle);
extern __declspec(dllexport) long long int Slice_ghetty_Triangle_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int Slice_ghetty_Triangle_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void Slice_ghetty_Triangle_set(long long int handle, GoInt _idx, long long int _vl);
extern __declspec(dllexport) void Slice_ghetty_Triangle_append(long long int handle, long long int _vl);

// --- wrapping map: map[string]any ---
//
extern __declspec(dllexport) long long int Map_string_any_CTor();
extern __declspec(dllexport) GoInt Map_string_any_len(long long int handle);
extern __declspec(dllexport) long long int Map_string_any_elem(long long int handle, char* _ky);
extern __declspec(dllexport) char Map_string_any_contains(long long int handle, char* _ky);
extern __declspec(dllexport) void Map_string_any_set(long long int handle, char* _ky, long long int _vl);
extern __declspec(dllexport) void Map_string_any_delete(long long int handle, char* _ky);
extern __declspec(dllexport) long long int Map_string_any_keys(long long int handle);

// ---- Global Variables: can only use functions to access ---
//
extern __declspec(dllexport) long long int ghetty_AlgorithmUsed();
extern __declspec(dllexport) void ghetty_Set_AlgorithmUsed(long long int val);
extern __declspec(dllexport) long long int ghetty_Basic();
extern __declspec(dllexport) void ghetty_Set_Basic(long long int val);
extern __declspec(dllexport) long long int ghetty_Brick();
extern __declspec(dllexport) void ghetty_Set_Brick(long long int val);
extern __declspec(dllexport) long long int ghetty_Buffer();
extern __declspec(dllexport) void ghetty_Set_Buffer(long long int val);
extern __declspec(dllexport) long long int ghetty_Bunny();
extern __declspec(dllexport) void ghetty_Set_Bunny(long long int val);
extern __declspec(dllexport) long long int ghetty_Cobble();
extern __declspec(dllexport) void ghetty_Set_Cobble(long long int val);
extern __declspec(dllexport) long long int ghetty_Cores();
extern __declspec(dllexport) void ghetty_Set_Cores(long long int val);
extern __declspec(dllexport) long long int ghetty_Depth();
extern __declspec(dllexport) void ghetty_Set_Depth(long long int val);
extern __declspec(dllexport) char* ghetty_EncodedImage();
extern __declspec(dllexport) void ghetty_Set_EncodedImage(char* val);
extern __declspec(dllexport) long long int ghetty_Log();
extern __declspec(dllexport) void ghetty_Set_Log(long long int val);
extern __declspec(dllexport) long long int ghetty_Mutex();
extern __declspec(dllexport) void ghetty_Set_Mutex(long long int val);
extern __declspec(dllexport) long long int ghetty_Position();
extern __declspec(dllexport) void ghetty_Set_Position(long long int val);
extern __declspec(dllexport) long long int ghetty_Projection();
extern __declspec(dllexport) void ghetty_Set_Projection(long long int val);
extern __declspec(dllexport) long long int ghetty_Scene();
extern __declspec(dllexport) void ghetty_Set_Scene(long long int val);
extern __declspec(dllexport) long long int ghetty_TileXSize();
extern __declspec(dllexport) void ghetty_Set_TileXSize(long long int val);
extern __declspec(dllexport) long long int ghetty_TileYSize();
extern __declspec(dllexport) void ghetty_Set_TileYSize(long long int val);
extern __declspec(dllexport) long long int ghetty_Tiles();
extern __declspec(dllexport) void ghetty_Set_Tiles(long long int val);
extern __declspec(dllexport) float ghetty_Time();
extern __declspec(dllexport) void ghetty_Set_Time(float val);
extern __declspec(dllexport) long long int ghetty_Triangles();
extern __declspec(dllexport) void ghetty_Set_Triangles(long long int val);
extern __declspec(dllexport) long long int ghetty_WaitGroup();
extern __declspec(dllexport) void ghetty_Set_WaitGroup(long long int val);

// --- wrapping struct: ghetty.Logger ---
//
extern __declspec(dllexport) long long int ghetty_Logger_CTor();
extern __declspec(dllexport) long long int ghetty_Logger_File_Get(long long int handle);
extern __declspec(dllexport) void ghetty_Logger_File_Set(long long int handle, long long int val);
extern __declspec(dllexport) double ghetty_Logger_CurrentFPS_Get(long long int handle);
extern __declspec(dllexport) void ghetty_Logger_CurrentFPS_Set(long long int handle, double val);
extern __declspec(dllexport) char ghetty_Logger_ShouldWrite_Get(long long int handle);
extern __declspec(dllexport) void ghetty_Logger_ShouldWrite_Set(long long int handle, char val);
extern __declspec(dllexport) void ghetty_Logger_Log(long long int _handle, double framerate, char goRun);
extern __declspec(dllexport) void ghetty_Logger_Close(long long int _handle, char goRun);

// --- wrapping struct: ghetty.ProcessedTriangle ---
//
extern __declspec(dllexport) long long int ghetty_ProcessedTriangle_CTor();
extern __declspec(dllexport) long long int ghetty_ProcessedTriangle_Triangle_Get(long long int handle);
extern __declspec(dllexport) void ghetty_ProcessedTriangle_Triangle_Set(long long int handle, long long int val);
extern __declspec(dllexport) long long int ghetty_ProcessedTriangle_Bounds_Get(long long int handle);
extern __declspec(dllexport) void ghetty_ProcessedTriangle_Bounds_Set(long long int handle, long long int val);
extern __declspec(dllexport) long long int ghetty_ProcessedTriangle_VS1_Get(long long int handle);
extern __declspec(dllexport) void ghetty_ProcessedTriangle_VS1_Set(long long int handle, long long int val);
extern __declspec(dllexport) long long int ghetty_ProcessedTriangle_VS2_Get(long long int handle);
extern __declspec(dllexport) void ghetty_ProcessedTriangle_VS2_Set(long long int handle, long long int val);
extern __declspec(dllexport) float ghetty_ProcessedTriangle_Span_Get(long long int handle);
extern __declspec(dllexport) void ghetty_ProcessedTriangle_Span_Set(long long int handle, float val);
extern __declspec(dllexport) float ghetty_ProcessedTriangle_Split_Get(long long int handle);
extern __declspec(dllexport) void ghetty_ProcessedTriangle_Split_Set(long long int handle, float val);

// --- wrapping struct: ghetty.Shader ---
//
extern __declspec(dllexport) long long int ghetty_Shader_CTor();

// --- wrapping struct: ghetty.Texture ---
//
extern __declspec(dllexport) long long int ghetty_Texture_CTor();
extern __declspec(dllexport) long long int ghetty_Texture_Width_Get(long long int handle);
extern __declspec(dllexport) void ghetty_Texture_Width_Set(long long int handle, long long int val);
extern __declspec(dllexport) long long int ghetty_Texture_Height_Get(long long int handle);
extern __declspec(dllexport) void ghetty_Texture_Height_Set(long long int handle, long long int val);
extern __declspec(dllexport) long long int ghetty_Texture_Data_Get(long long int handle);
extern __declspec(dllexport) void ghetty_Texture_Data_Set(long long int handle, long long int val);
extern __declspec(dllexport) long long int ghetty_Texture_ConvertPosition(long long int _handle, long long int uv);

// --- wrapping struct: ghetty.Tile ---
//
extern __declspec(dllexport) long long int ghetty_Tile_CTor();
extern __declspec(dllexport) long long int ghetty_Tile_Frame_Get(long long int handle);
extern __declspec(dllexport) void ghetty_Tile_Frame_Set(long long int handle, long long int val);
extern __declspec(dllexport) long long int ghetty_Tile_Depth_Get(long long int handle);
extern __declspec(dllexport) void ghetty_Tile_Depth_Set(long long int handle, long long int val);
extern __declspec(dllexport) long long int ghetty_Tile_Triangles_Get(long long int handle);
extern __declspec(dllexport) void ghetty_Tile_Triangles_Set(long long int handle, long long int val);
extern __declspec(dllexport) long long int ghetty_Tile_X_Get(long long int handle);
extern __declspec(dllexport) void ghetty_Tile_X_Set(long long int handle, long long int val);
extern __declspec(dllexport) long long int ghetty_Tile_Y_Get(long long int handle);
extern __declspec(dllexport) void ghetty_Tile_Y_Set(long long int handle, long long int val);
extern __declspec(dllexport) void ghetty_Tile_Barycentric(long long int _handle, long long int triangle, char goRun);
extern __declspec(dllexport) void ghetty_Tile_EdgeTest(long long int _handle, long long int triangle, char goRun);
extern __declspec(dllexport) void ghetty_Tile_SweepLine(long long int _handle, long long int triangle, char goRun);
extern __declspec(dllexport) void ghetty_Tile_Rasterize(long long int _handle, char goRun);
extern __declspec(dllexport) void ghetty_Tile_Reset(long long int _handle, char goRun);
extern __declspec(dllexport) void ghetty_Tile_Add(long long int _handle, long long int triangle, char goRun);
extern __declspec(dllexport) long long int ghetty_Tile_ConvertPosition(long long int _handle, long long int x, long long int y);
extern __declspec(dllexport) void ghetty_Tile_Set(long long int _handle, long long int position, char r, char g, char b, float depth, char goRun);
extern __declspec(dllexport) void ghetty_Tile_Clear(long long int _handle, char r, char g, char b, char goRun);

// --- wrapping struct: ghetty.Triangle ---
//
extern __declspec(dllexport) long long int ghetty_Triangle_CTor();
extern __declspec(dllexport) long long int ghetty_Triangle_UV_Get(long long int handle);
extern __declspec(dllexport) long long int ghetty_Triangle_Vertices_Get(long long int handle);
extern __declspec(dllexport) long long int ghetty_Triangle_Color_Get(long long int handle);
extern __declspec(dllexport) long long int ghetty_Triangle_Normals_Get(long long int handle);
extern __declspec(dllexport) long long int ghetty_Triangle_Texture_Get(long long int handle);
extern __declspec(dllexport) void ghetty_Triangle_Texture_Set(long long int handle, long long int val);
extern __declspec(dllexport) long long int ghetty_Triangle_Shader_Get(long long int handle);
extern __declspec(dllexport) void ghetty_Triangle_Shader_Set(long long int handle, long long int val);
extern __declspec(dllexport) void ghetty_Triangle_Transform(long long int _handle, long long int m2, char goRun);
extern __declspec(dllexport) void ghetty_Triangle_ScreenSpace(long long int _handle, char goRun);
extern __declspec(dllexport) void ghetty_Triangle_Normalize(long long int _handle, char goRun);
extern __declspec(dllexport) void ghetty_Triangle_Sort(long long int _handle, char goRun);
extern __declspec(dllexport) long long int ghetty_Triangle_Bounds(long long int _handle);
extern __declspec(dllexport) long long int ghetty_Triangle_Copy(long long int _handle);

// --- wrapping struct: ghetty.Game ---
//
extern __declspec(dllexport) long long int ghetty_Game_CTor();
extern __declspec(dllexport) char* ghetty_Game_Update(long long int _handle);
extern __declspec(dllexport) void ghetty_Game_Draw(long long int _handle, long long int screen, char goRun);

// --- wrapping slice: ghetty.Matrix ---
//
extern __declspec(dllexport) long long int ghetty_Matrix_CTor();
extern __declspec(dllexport) GoInt ghetty_Matrix_len(long long int handle);
extern __declspec(dllexport) long long int ghetty_Matrix_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int ghetty_Matrix_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void ghetty_Matrix_set(long long int handle, GoInt _idx, long long int _vl);
extern __declspec(dllexport) void ghetty_Matrix_append(long long int handle, long long int _vl);
extern __declspec(dllexport) long long int ghetty_Matrix_Multiply(long long int _handle, long long int m2);
extern __declspec(dllexport) long long int ghetty_Matrix_Vertex(long long int _handle);

// --- wrapping slice: ghetty.Model ---
//
extern __declspec(dllexport) long long int ghetty_Model_CTor();
extern __declspec(dllexport) GoInt ghetty_Model_len(long long int handle);
extern __declspec(dllexport) long long int ghetty_Model_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int ghetty_Model_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void ghetty_Model_set(long long int handle, GoInt _idx, long long int _vl);
extern __declspec(dllexport) void ghetty_Model_append(long long int handle, long long int _vl);

// --- wrapping slice: ghetty.Vertex ---
//
extern __declspec(dllexport) long long int ghetty_Vertex_CTor();
extern __declspec(dllexport) GoInt ghetty_Vertex_len(long long int handle);
extern __declspec(dllexport) float ghetty_Vertex_elem(long long int handle, GoInt _idx);
extern __declspec(dllexport) long long int ghetty_Vertex_subslice(long long int handle, GoInt _st, GoInt _ed);
extern __declspec(dllexport) void ghetty_Vertex_set(long long int handle, GoInt _idx, float _vl);
extern __declspec(dllexport) void ghetty_Vertex_append(long long int handle, float _vl);
extern __declspec(dllexport) void ghetty_Vertex_Sum(long long int _handle, long long int v2, char goRun);
extern __declspec(dllexport) void ghetty_Vertex_Sub(long long int _handle, long long int v2, char goRun);
extern __declspec(dllexport) void ghetty_Vertex_Multiply(long long int _handle, long long int v2, char goRun);
extern __declspec(dllexport) void ghetty_Vertex_Transform(long long int _handle, long long int m2, char goRun);
extern __declspec(dllexport) float ghetty_Vertex_Dot(long long int _handle, long long int v2);
extern __declspec(dllexport) long long int ghetty_Vertex_Cross(long long int _handle, long long int v2);
extern __declspec(dllexport) float ghetty_Vertex_CrossProduct(long long int _handle, long long int v2);
extern __declspec(dllexport) void ghetty_Vertex_Interpolate(long long int _handle, long long int v2, float factor, char goRun);
extern __declspec(dllexport) char ghetty_Vertex_InsideClipSpace(long long int _handle);
extern __declspec(dllexport) void ghetty_Vertex_ScreenSpace(long long int _handle, char goRun);
extern __declspec(dllexport) void ghetty_Vertex_Normalize(long long int _handle, char goRun);
extern __declspec(dllexport) long long int ghetty_Vertex_Matrix(long long int _handle);
extern __declspec(dllexport) void ghetty_Vertex_Swap(long long int _handle, long long int v2, char goRun);
extern __declspec(dllexport) long long int ghetty_Vertex_Copy(long long int _handle);
extern __declspec(dllexport) long long int ghetty_NewLogger(char* directory);
extern __declspec(dllexport) long long int ghetty_Process(long long int triangle);
extern __declspec(dllexport) long long int ghetty_LoadTexture(char* directory);
extern __declspec(dllexport) long long int ghetty_ProjectionMatrix();
extern __declspec(dllexport) long long int ghetty_TransformationMatrix(long long int p, long long int r);
extern __declspec(dllexport) void ghetty_BasicVertex(long long int vertex, long long int uv, long long int normal, long long int color, long long int matrices, char goRun);
extern __declspec(dllexport) void ghetty_BuildAndProcess(long long int triangle, long long int tiles, char goRun);
extern __declspec(dllexport) float ghetty_Clamp(float value, long long int min, long long int max);
extern __declspec(dllexport) void ghetty_Launch(PyObject* renderCallback, char goRun);
extern __declspec(dllexport) long long int ghetty_LoadModel(char* directory);

#ifdef __cplusplus
}
#endif
